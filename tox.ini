[tox]
envlist = py3, xenial-dev, pycodestyle, pyflakes, pylint
recreate = True

[testenv]
commands = {envpython} -m pytest {posargs:tests/unittests cloudinit}
setenv =
    LC_ALL = en_US.utf-8
passenv=
    PYTEST_ADDOPTS

[testenv:pycodestyle]
basepython = python3
deps =
    pycodestyle==2.4.0
commands = {envpython} -m pycodestyle {posargs:cloudinit/ tests/ tools/}

# https://github.com/gabrielfalcao/HTTPretty/issues/223
setenv =
    LC_ALL = en_US.utf-8

[testenv:pylint]
basepython = python3
deps =
    # requirements
    pylint==2.3.1
    # test-requirements because unit tests are now present in cloudinit tree
    -r{toxinidir}/test-requirements.txt
    -r{toxinidir}/integration-requirements.txt
commands = {envpython} -m pylint {posargs:cloudinit tests tools}

[testenv:py3]
basepython = python3
deps =
    -r{toxinidir}/test-requirements.txt
commands = {envpython} -m pytest \
            --durations 10 \
            {posargs:--cov=cloudinit --cov-branch \
            tests/unittests cloudinit}

[testenv:py27]
basepython = python2.7
deps = -r{toxinidir}/test-requirements.txt

[flake8]
#H102  Apache 2.0 license header not found
ignore=H404,H405,H105,H301,H104,H403,H101,H102,H106,H304
exclude = .venv,.tox,dist,doc,*egg,.git,build,tools

[testenv:doc]
basepython = python3
deps =
    -r{toxinidir}/doc-requirements.txt
commands =
    {envpython} -m sphinx {posargs:doc/rtd doc/rtd_html}
    doc8 doc/rtd

[xenial-shared-deps]
# The version of pytest in xenial doesn't work with Python 3.8, so we define
# two xenial environments: [testenv:xenial] runs the tests with exactly the
# version of pytest present in xenial, and is used in CI.  [testenv:xenial-dev]
# runs the tests with the lowest version of pytest that works with Python 3.8,
# 3.0.7, but keeps the other dependencies at xenial's level.
#
# (This section is not a testenv, it is used to maintain a single definition of
# the dependencies shared between the two xenial testenvs.)
deps =
    # requirements
    jinja2==2.8
    pyyaml==3.11
    oauthlib==1.0.3
    pyserial==3.0.1
    configobj==5.0.6
    requests==2.9.1
    # test-requirements
    httpretty==0.9.6
    mock==1.3.0

[testenv:xenial]
# When updating this commands definition, also update the definition in
# [testenv:xenial-dev].  See the comment there for details.
commands =
  python ./tools/pipremove jsonschema
  python -m pytest {posargs:tests/unittests cloudinit}
basepython = python3
deps =
    # Refer to the comment in [xenial-shared-deps] for details
    {[xenial-shared-deps]deps}
    jsonpatch==1.10
    pytest==2.8.7

[testenv:xenial-dev]
# This should be:
#   commands = {[testenv:xenial]commands}
# but the version of pytest in xenial has a bug
# (https://github.com/tox-dev/tox/issues/208) which means that the {posargs}
# substitution variable is misparsed and causes a traceback.  Ensure that any
# changes here are reflected in [testenv:xenial].
commands =
  python ./tools/pipremove jsonschema
  python -m pytest {posargs:tests/unittests cloudinit}
basepython = {[testenv:xenial]basepython}
deps =
    # Refer to the comment in [xenial-shared-deps] for details
    {[xenial-shared-deps]deps}
    # jsonpatch in xenial is 1.10, not 1.19 (#839779). The oldest version
    # to work with python3.6 is 1.16 as found in Artful.  To keep default
    # invocation of 'tox' happy, accept the difference in version here.
    jsonpatch==1.16
    pytest==3.0.7

[testenv:tip-pycodestyle]
commands = {envpython} -m pycodestyle {posargs:cloudinit/ tests/ tools/}
deps = pycodestyle

[testenv:pyflakes]
commands = {envpython} -m pyflakes {posargs:cloudinit/ tests/ tools/}
deps =
    pyflakes==2.1.1

[testenv:tip-pyflakes]
commands = {envpython} -m pyflakes {posargs:cloudinit/ tests/ tools/}
deps = pyflakes

[testenv:tip-pylint]
commands = {envpython} -m pylint {posargs:cloudinit tests tools}
deps =
    # requirements
    pylint
    # test-requirements
    -r{toxinidir}/test-requirements.txt
    -r{toxinidir}/integration-requirements.txt

[testenv:citest]
basepython = python3
commands = {envpython} -m tests.cloud_tests {posargs}
passenv = HOME
deps =
    -r{toxinidir}/integration-requirements.txt
