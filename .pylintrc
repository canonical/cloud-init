[MASTER]

# --go-faster, use multiple processes to speed up Pylint
jobs=4


[MESSAGES CONTROL]

# Errors and warings with some filtered:
# W0105(pointless-string-statement)
# W0107(unnecessary-pass)
# W0201(attribute-defined-outside-init)
# W0212(protected-access)
# W0221(arguments-differ)
# W0222(signature-differs)
# W0223(abstract-method)
# W0231(super-init-not-called)
# W0311(bad-indentation)
# W0511(fixme)
# W0602(global-variable-not-assigned)
# W0603(global-statement)
# W0611(unused-import)
# W0612(unused-variable)
# W0613(unused-argument)
# W0621(redefined-outer-name)
# W0622(redefined-builtin)
# W0631(undefined-loop-variable)
# W0703(broad-except)
# W1401(anomalous-backslash-in-string)

disable=C, F, I, R, W0105, W0107, W0201, W0212, W0221, W0222, W0223, W0231, W0311, W0511, W0602, W0603, W0611, W0613, W0621, W0622, W0631, W0703, W1401


[REPORTS]

# Set the output format. Available formats are text, parseable, colorized, msvs
output-format=parseable

# Just the errors please, no full report
reports=no


[TYPECHECK]

# List of module names for which member attributes should not be checked
# (useful for modules/projects where namespaces are manipulated during runtime
# and thus existing member attributes cannot be deduced by static analysis. It
# supports qualified module names, as well as Unix pattern matching.
ignored-modules=
 http.client,
 httplib,
 pkg_resources,
 six.moves,
 # cloud_tests requirements.
 boto3,
 botocore,
 paramiko,
 pylxd,
 simplestreams

# List of class names for which member attributes should not be checked (useful
# for classes with dynamically set attributes). This supports the use of
# qualified names.
# argparse.Namespace from https://github.com/PyCQA/pylint/issues/2413
ignored-classes=argparse.Namespace,optparse.Values,thread._local,ImageManager,ContainerManager

# List of members which are set dynamically and missed by pylint inference
# system, and so shouldn't trigger E1101 when accessed. Python regular
# expressions are accepted.
generated-members=types,http.client,command_handlers,m_.*,enter_context

