Description: don't configure networking on every boot for EC2 Classic instances
 The (ifupdown) networking configuration generated in xenial doesn't hardcode a
 MAC address, so xenial EC2 Classic instances don't need to apply networking
 configuration every boot to fix LP: #1802073
Author: Daniel Watkins <oddbloke@ubuntu.com>
Forwarded: not-needed
Last-Update: 2019-03-08
---
This patch header follows DEP-3: http://dep.debian.net/deps/dep3/
--- a/cloudinit/sources/DataSourceEc2.py
+++ b/cloudinit/sources/DataSourceEc2.py
@@ -19,7 +19,6 @@ from cloudinit import sources
 from cloudinit import url_helper as uhelp
 from cloudinit import util
 from cloudinit import warnings
-from cloudinit.event import EventType
 
 LOG = logging.getLogger(__name__)
 
@@ -415,17 +414,6 @@ class DataSourceEc2(sources.DataSource):
                 net_md, fallback_nic=iface,
                 full_network_config=util.get_cfg_option_bool(
                     self.ds_cfg, 'apply_full_imds_network_config', True))
-
-            # RELEASE_BLOCKER: xenial should drop the below if statement,
-            # because the issue being addressed doesn't exist pre-netplan.
-            # (This datasource doesn't implement check_instance_id() so the
-            # datasource object is recreated every boot; this means we don't
-            # need to modify update_events on cloud-init upgrade.)
-
-            # Non-VPC (aka Classic) Ec2 instances need to rewrite the
-            # network config file every boot due to MAC address change.
-            if self.is_classic_instance():
-                self.update_events['network'].add(EventType.BOOT)
         else:
             LOG.warning("Metadata 'network' key not valid: %s.", net_md)
         self._network_config = result
