Description: Don't allow network-config
This may add a new wait time for a file that doesn't exist on existing series
so patch it out.

Author: Brett Holman <brett.holman@canonical.com>
Last-Update: 2024-08-02

--- a/cloudinit/sources/DataSourceNoCloud.py
+++ b/cloudinit/sources/DataSourceNoCloud.py
@@ -184,7 +184,7 @@ class DataSourceNoCloud(sources.DataSour
 
             # This could throw errors, but the user told us to do it
             # so if errors are raised, let them raise
-            md_seed, ud, vd, network = util.read_seeded(seedfrom, timeout=None)
+            md_seed, ud, vd, _ = util.read_seeded(seedfrom, timeout=None)
             LOG.debug("Using seeded cache data from %s", seedfrom)
 
             # Values in the command line override those from the seed
@@ -193,7 +193,6 @@ class DataSourceNoCloud(sources.DataSour
             )
             mydata["user-data"] = ud
             mydata["vendor-data"] = vd
-            mydata["network-config"] = network
             found.append(seedfrom)
 
         # Now that we have exhausted any other places merge in the defaults
--- a/cloudinit/util.py
+++ b/cloudinit/util.py
@@ -1025,7 +1025,6 @@ def read_seeded(base="", ext="", timeout
         ud_url = base.replace("%s", "user-data" + ext)
         vd_url = base.replace("%s", "vendor-data" + ext)
         md_url = base.replace("%s", "meta-data" + ext)
-        network_url = base.replace("%s", "network-config" + ext)
     else:
         if features.NOCLOUD_SEED_URL_APPEND_FORWARD_SLASH:
             if base[-1] != "/" and parse.urlparse(base).query == "":
@@ -1034,17 +1033,7 @@ def read_seeded(base="", ext="", timeout
         ud_url = "%s%s%s" % (base, "user-data", ext)
         vd_url = "%s%s%s" % (base, "vendor-data", ext)
         md_url = "%s%s%s" % (base, "meta-data", ext)
-        network_url = "%s%s%s" % (base, "network-config", ext)
     network = None
-    try:
-        network_resp = url_helper.read_file_or_url(
-            network_url, timeout=timeout, retries=retries
-        )
-    except url_helper.UrlError as e:
-        LOG.debug("No network config provided: %s", e)
-    else:
-        if network_resp.ok():
-            network = load_yaml(network_resp.contents)
     md_resp = url_helper.read_file_or_url(
         md_url, timeout=timeout, retries=retries
     )
--- a/tests/unittests/test_util.py
+++ b/tests/unittests/test_util.py
@@ -2485,7 +2485,7 @@ class TestReadOptionalSeed:
                 {
                     "meta-data": {"md": "val"},
                     "user-data": b"ud",
-                    "network-config": {"net": "cfg"},
+                    "network-config": None,
                     "vendor-data": None,
                 },
                 True,
@@ -2540,7 +2540,7 @@ class TestReadSeeded:
         assert found_md == {"key1": "val1"}
         assert found_ud == ud
         assert found_vd == vd
-        assert found_network == {"test": "true"}
+        assert found_network is None
 
     @pytest.mark.parametrize(
         "base, feature_flag, req_urls",
@@ -2549,7 +2549,6 @@ class TestReadSeeded:
                 "http://10.0.0.1/%s?qs=1",
                 True,
                 [
-                    "http://10.0.0.1/network-config?qs=1",
                     "http://10.0.0.1/meta-data?qs=1",
                     "http://10.0.0.1/user-data?qs=1",
                     "http://10.0.0.1/vendor-data?qs=1",
@@ -2560,7 +2559,6 @@ class TestReadSeeded:
                 "https://10.0.0.1:8008/",
                 True,
                 [
-                    "https://10.0.0.1:8008/network-config",
                     "https://10.0.0.1:8008/meta-data",
                     "https://10.0.0.1:8008/user-data",
                     "https://10.0.0.1:8008/vendor-data",
@@ -2571,7 +2569,6 @@ class TestReadSeeded:
                 "https://10.0.0.1:8008",
                 True,
                 [
-                    "https://10.0.0.1:8008/network-config",
                     "https://10.0.0.1:8008/meta-data",
                     "https://10.0.0.1:8008/user-data",
                     "https://10.0.0.1:8008/vendor-data",
@@ -2582,7 +2579,6 @@ class TestReadSeeded:
                 "https://10.0.0.1:8008",
                 False,
                 [
-                    "https://10.0.0.1:8008network-config",
                     "https://10.0.0.1:8008meta-data",
                     "https://10.0.0.1:8008user-data",
                     "https://10.0.0.1:8008vendor-data",
@@ -2593,7 +2589,6 @@ class TestReadSeeded:
                 "https://10.0.0.1:8008?qs=",
                 True,
                 [
-                    "https://10.0.0.1:8008?qs=network-config",
                     "https://10.0.0.1:8008?qs=meta-data",
                     "https://10.0.0.1:8008?qs=user-data",
                     "https://10.0.0.1:8008?qs=vendor-data",
@@ -2632,7 +2627,7 @@ class TestReadSeeded:
         # user-data, vendor-data read raw. It could be scripts or other format
         assert found_ud == "/user-data: 1"
         assert found_vd == "/vendor-data: 1"
-        assert found_network == {"/network-config": 1}
+        assert found_network is None
         assert [
             mock.call(req_url, timeout=5, retries=10) for req_url in req_urls
         ] == m_read.call_args_list
@@ -2662,7 +2657,7 @@ class TestReadSeededWithoutVendorData(he
         assert found_md == {"key1": "val1"}
         assert found_ud == ud
         assert found_vd == vd
-        assert found_network == {"test": "true"}
+        assert found_network is None
 
 
 class TestEncode(helpers.TestCase):
