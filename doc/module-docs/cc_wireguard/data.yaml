cc_wireguard:
  description: "The Wireguard module provides a dynamic interface for configuring\n\
    Wireguard (as a peer or server) in a straightforward way.\n\nThis module takes\
    \ care of;\n\n- writing interface configuration files\n- enabling and starting\
    \ interfaces\n- installing wireguard-tools package\n- loading wireguard kernel\
    \ module\n- executing readiness probes\n\n**What is a readiness probe?**\n\nThe\
    \ idea behind readiness probes is to ensure Wireguard connectivity\nbefore continuing\
    \ the cloud-init process. This could be useful if you need\naccess to specific\
    \ services like an internal APT Repository Server\n(e.g., Landscape) to install/update\
    \ packages.\n\n**Example**\n\nAn edge device can't access the internet but uses\
    \ cloud-init modules which\nwill install packages (e.g. ``landscape``, ``packages``,\n\
    ``ubuntu_advantage``). Those modules will fail due to missing internet\nconnection.\
    \ The ``wireguard`` module fixes that problem as it waits until\nall readiness\
    \ probes (which can be arbitrary commands, e.g. checking if a\nproxy server is\
    \ reachable over Wireguard network) are finished, before\ncontinuing the cloud-init\
    \ ``config`` stage.\n\n.. note::\n   In order to use DNS with Wireguard you have\
    \ to install the\n   ``resolvconf`` package or symlink it to systemd's ``resolvectl``,\n\
    \   otherwise ``wg-quick`` commands will throw an error message that\n   executable\
    \ ``resolvconf`` is missing, which leads the ``wireguard``\n   module to fail.\n"
  examples:
  - comment: 'Configure one or more Wireguard interfaces and provide optional

      readiness probes.

      '
    file: cc_wireguard/example1.yaml
  name: Wireguard
  title: Module to configure Wireguard tunnel
